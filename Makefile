# Sample Makefile for HW4
#
# USAGE:
#
# // to compile:
# make
#
# // to compile and run unit-tests:
# make test
#
# // remove generated files (i.e. object files, binaries, text files generated by unit tests, etc.):
# make clean
#

# make variables let us avoid pasting these options in multiple places
CC = gcc 
# this version of CFLAGS has flags that are helpful for debugging
CFLAGS = -std=c99 -Wall -Wextra -pedantic -O0 -g -fprofile-arcs -ftest-coverage
# this version of CFLAGS would be more appropriate for a "final" build;
# to use it, comment out the first version and uncomment this version.
#CFLAGS = -std=c99 -Wall -Wextra -pedantic -O


# First taget is "default" target; by default, we build the hw4 target
bin: hw4

# Target "all" will build all executables we know how to
all: hw4 wordsearchTests 

# Target "test" will 
test: wordsearchTests
	@echo "Running tests..."
	# NOTE: stderr is redirected to testErrors.txt, which lets
	# you concentrate on the output of the test program and ignore
	# any error messages printed by your functions.  This can be
	# changed in the Makefile if necessary.
	@./wordsearchTests 2> testErrors.txt


### targets to build object files ###

wordsearch.o: wordsearch.c wordsearch.h
	$(CC) $(CFLAGS) -c wordsearch.c
# (short for) gcc -std=c99 -Wall -Wextra -pedantic -O -c wordsearch.c

wordsearchTests.o: wordsearchTests.c wordsearch.h
	$(CC) $(CFLAGS) -c wordsearchTests.c

hw4.o: hw4.c wordsearch.h
	$(CC) $(CFLAGS) -c hw4.c


### targets to build executables ###

wordsearchTests: wordsearchTests.o wordsearch.o
	$(CC) $(CFLAGS) -o wordsearchTests wordsearchTests.o wordsearch.o

hw4: hw4.o wordsearch.o
	$(CC) $(CFLAGS) -o hw4 hw4.o wordsearch.o


### target to clean up generated files ###

clean:
	rm -f *.o *.gcda *.gcno *.gcov wordsearchTests hw4 puzzleGen test*.txt errors.txt
